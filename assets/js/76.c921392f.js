(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{286:function(t,a,s){"use strict";s.r(a);var e=s(6),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"http-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-query"}},[t._v("#")]),t._v(" Http Query")]),t._v(" "),s("p",[t._v("The Http Client comes with a powerful "),s("RouterLink",{attrs:{to:"/archive/current/http/clients/query/"}},[t._v("Http Query Builder")]),t._v(" that allows you to set query parameters in a fluent manner, similar to "),s("a",{attrs:{href:"https://laravel.com/docs/7.x/queries#introduction",target:"_blank",rel:"noopener noreferrer"}},[t._v("Laravel's database query builder"),s("OutboundLink")],1),t._v(" ("),s("em",[t._v("but with significantly less features")]),t._v(").\nYou can read more about the builder, in the upcoming "),s("RouterLink",{attrs:{to:"/archive/current/http/clients/query/"}},[t._v("chapter")]),t._v(".\nFor now, the more traditional ways of setting a request's http query parameters is briefly illustrated.\nThis may be useful for you, when the provided query builder isn't able to meet your needs.")],1),t._v(" "),s("h2",{attrs:{id:"via-uri"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#via-uri"}},[t._v("#")]),t._v(" Via Uri")]),t._v(" "),s("p",[t._v("You can always specify query parameters manually, via the request's uri.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$response")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$client")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withUri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/users?search=John'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Caution")]),t._v(" "),s("p",[t._v("If you choose to set query parameters via the uri and also make use the Http Query Builder, then the entire query string provided via the uri is ignored!")]),t._v(" "),s("p",[t._v("In other words, you "),s("strong",[t._v("SHOULD NOT")]),t._v(" mix the methods of how you state query parameters.")])]),t._v(" "),s("h2",{attrs:{id:"via-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#via-configuration"}},[t._v("#")]),t._v(" Via Configuration")]),t._v(" "),s("p",[t._v("Another way to specify query parameters, is via your configuration.\nHere, you may specify a string or an array of key-value pairs.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'profiles'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'default'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'driver'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Aedart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Clients"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Drivers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("DefaultHttpClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'options'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                \n                "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'query'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'search'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'John'")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... remaining not shown ...")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("p",[t._v("The above shown example may not seem very useful, but sometimes you might be working with a type of API, where you always are required to send one or more query parameters, for each request.\nIf that is the case, then you are better off stating these directly into your configuration.")]),t._v(" "),s("p",[t._v("You can read more about the "),s("code",[t._v("query")]),t._v(" option, in "),s("a",{attrs:{href:"http://docs.guzzlephp.org/en/stable/request-options.html#query",target:"_blank",rel:"noopener noreferrer"}},[t._v("Guzzle's documentation"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Query parameters that are added via the configuration are automatically also appended to your Http Query Builder.")])])])}),[],!1,null,null,null);a.default=r.exports}}]);