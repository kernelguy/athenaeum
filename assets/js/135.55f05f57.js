(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{343:function(t,e,a){"use strict";a.r(e);var s=a(6),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"property-overloading"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#property-overloading"}},[t._v("#")]),t._v(" Property overloading")]),t._v(" "),a("p",[t._v("Each defined property is accessible in multiple ways, if a getter and or setter method has been defined for that given property.")]),t._v(" "),a("p",[t._v("For additional information, please read about "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Mutator_method",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mutators and Accessor"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"http://php.net/manual/en/language.oop5.overloading.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("PHP's overloading"),a("OutboundLink")],1),t._v(",\nand "),a("a",{attrs:{href:"http://php.net/manual/en/class.arrayaccess.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("PHP's Array-Access"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a new instance of your DTO")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Name can be set using normal setter methods")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$person")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'John'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// But you can also just set the property itself")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$person")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'Jack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Will automatically invoke setName()")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// And you can also set it, using an array-accessor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'Jane'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Will also automatically invoke setName()")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... //")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Obtain age using the regular getter method")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$person")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAge")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Can also get it via invoking the property directly")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$person")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Will automatically invoke getAge()")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Lastly, it can also be access via an array-accessor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Also invokes the getAge()")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("If you are using a modern "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Integrated_development_environment",target:"_blank",rel:"noopener noreferrer"}},[t._v("IDE"),a("OutboundLink")],1),t._v(", then it will most likely support "),a("a",{attrs:{href:"http://www.phpdoc.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PHPDoc"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("By adding a "),a("a",{attrs:{href:"http://www.phpdoc.org/docs/latest/references/phpdoc/tags/property.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("@property")]),a("OutboundLink")],1),t._v(" tag to your interface or concrete implementation, your IDE will be able to auto-complete the overloadable properties.")])]),t._v(" "),a("h2",{attrs:{id:"behind-the-scene"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#behind-the-scene"}},[t._v("#")]),t._v(" Behind the Scene")]),t._v(" "),a("p",[t._v("The "),a("RouterLink",{attrs:{to:"/archive/v1x/properties/"}},[a("code",[t._v("Overload")])]),t._v(" component is responsible for handling the properties overloading of the "),a("code",[t._v("Dto")]),t._v(" abstraction.")],1)])}),[],!1,null,null,null);e.default=n.exports}}]);