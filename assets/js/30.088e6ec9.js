(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{240:function(e,t,o){"use strict";o.r(t);var r=o(6),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"prerequisite"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#prerequisite"}},[e._v("#")]),e._v(" Prerequisite")]),e._v(" "),o("p"),o("div",{staticClass:"table-of-contents"},[o("ul",[o("li",[o("a",{attrs:{href:"#composer"}},[e._v("Composer")])]),o("li",[o("a",{attrs:{href:"#php-v7-4-x"}},[e._v("PHP v7.4.x")]),o("ul",[o("li",[o("a",{attrs:{href:"#other-requirements"}},[e._v("Other Requirements")])])])]),o("li",[o("a",{attrs:{href:"#tools-to-help-upgrading"}},[e._v("Tools to help Upgrading")]),o("ul",[o("li",[o("a",{attrs:{href:"#php-compatibility-checker"}},[e._v("PHP Compatibility checker")])]),o("li",[o("a",{attrs:{href:"#symfony-polyfill"}},[e._v("Symfony Polyfill")])]),o("li",[o("a",{attrs:{href:"#rector"}},[e._v("Rector")])]),o("li",[o("a",{attrs:{href:"#other-tools"}},[e._v("Other Tools?")])]),o("li",[o("a",{attrs:{href:"#tip-for-installing-tools"}},[e._v("Tip for installing Tools")])])])]),o("li",[o("a",{attrs:{href:"#testing"}},[e._v("Testing...?")])])])]),o("p"),e._v(" "),o("h2",{attrs:{id:"composer"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#composer"}},[e._v("#")]),e._v(" Composer")]),e._v(" "),o("p",[e._v("This might seem trivial for some developers, yet "),o("a",{attrs:{href:"https://getcomposer.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("composer"),o("OutboundLink")],1),e._v(" must be available within your legacy application.\nWithout it's "),o("a",{attrs:{href:"https://getcomposer.org/doc/01-basic-usage.md#autoloading",target:"_blank",rel:"noopener noreferrer"}},[e._v("autoloading capabilities"),o("OutboundLink")],1),e._v(", it can be difficult to integrate this package's components.\nTherefore, please ensure that composer is installed and available inside your legacy application.")]),e._v(" "),o("h2",{attrs:{id:"php-v7-4-x"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#php-v7-4-x"}},[e._v("#")]),e._v(" PHP v7.4.x")]),e._v(" "),o("p",[e._v("Unfortunately this package is only available from Athenaeum "),o("code",[e._v("v4.x")]),e._v(", meaning that it requires PHP "),o("code",[e._v("v7.4.x")]),e._v(" or higher.\nIf you application only runs on older versions of PHP, then you should spend the time it requires to upgrade.\nYour application stands to benefit greatly from this, both in terms of security, performance and new language features.")]),e._v(" "),o("p",[e._v("Please consult yourself with "),o("a",{attrs:{href:"https://www.php.net/manual/en/migration74.php",target:"_blank",rel:"noopener noreferrer"}},[e._v("PHP Migration Guides"),o("OutboundLink")],1),e._v(", for additional information.")]),e._v(" "),o("p",[o("em",[e._v("As the author of this package, I apologise if you somehow feel mislead.\nI have been working on this and many other packages by myself.\nThere are limits to how much backwards compatibility I can offer.")])]),e._v(" "),o("h3",{attrs:{id:"other-requirements"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#other-requirements"}},[e._v("#")]),e._v(" Other Requirements")]),e._v(" "),o("p",[e._v("See eventual remaining requirements on "),o("a",{attrs:{href:"https://packagist.org/packages/aedart/athenaeum-core",target:"_blank",rel:"noopener noreferrer"}},[e._v("packagist"),o("OutboundLink")],1),e._v(" or inside this package's "),o("code",[e._v("composer.json")]),e._v(".")]),e._v(" "),o("h2",{attrs:{id:"tools-to-help-upgrading"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tools-to-help-upgrading"}},[e._v("#")]),e._v(" Tools to help Upgrading")]),e._v(" "),o("p",[e._v("You are not the only developer, that has to deal with upgrading legacy applications.\nMany other developers have gone through the same. Some of these developers have written very useful tools that can help you a lot.\nBelow is a small list of tools that will help you upgrade.")]),e._v(" "),o("h3",{attrs:{id:"php-compatibility-checker"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#php-compatibility-checker"}},[e._v("#")]),e._v(" PHP Compatibility checker")]),e._v(" "),o("p",[e._v("The "),o("a",{attrs:{href:"https://github.com/PHPCompatibility/PHPCompatibility",target:"_blank",rel:"noopener noreferrer"}},[e._v("PHP Compatibility Checker"),o("OutboundLink")],1),e._v(" for "),o("a",{attrs:{href:"https://github.com/squizlabs/PHP_CodeSniffer",target:"_blank",rel:"noopener noreferrer"}},[e._v("PHP_CodeSniffer"),o("OutboundLink")],1),e._v(" is a really great tools for identifying outdated code, e.g. unsupported features.\nIt can be a bit cumbersome to install and setup. Yet, once it is up and running, it will show you exactly what line(s) of code are not compatible with PHP 7.x, 8.x,...etc.")]),e._v(" "),o("h3",{attrs:{id:"symfony-polyfill"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#symfony-polyfill"}},[e._v("#")]),e._v(" Symfony Polyfill")]),e._v(" "),o("p",[e._v('Sadly, it is not always easy to deal with outdated code. Sometimes you might hit a "brick wall" that requires lots of hours or perhaps days to get through.\nThis is especially true, when your legacy application depends on PHP features that are no longer supported.\nFortunately, '),o("a",{attrs:{href:"https://github.com/symfony/polyfill",target:"_blank",rel:"noopener noreferrer"}},[e._v("Symfony Polyfill"),o("OutboundLink")],1),e._v(" has a great library that provides backwards compatibility to several outdated features.")]),e._v(" "),o("h3",{attrs:{id:"rector"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#rector"}},[e._v("#")]),e._v(" Rector")]),e._v(" "),o("p",[e._v("This is probably the coolest, and most powerful tool for upgrading outdated code. It able to do so automatically!\nBased on a few rules, "),o("a",{attrs:{href:"https://getrector.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rector"),o("OutboundLink")],1),e._v(" will automatically refactor your code.\nAccording to their documentation, it can upgrade code from PHP "),o("code",[e._v("v5.3.x")]),e._v(", all the way to PHP "),o("code",[e._v("v7.4.x")]),e._v(".\nCheck out their "),o("a",{attrs:{href:"https://getrector.org/demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("online demo"),o("OutboundLink")],1),e._v(" to see it in action.")]),e._v(" "),o("h3",{attrs:{id:"other-tools"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#other-tools"}},[e._v("#")]),e._v(" Other Tools?")]),e._v(" "),o("p",[e._v("There are many more tools available, than the ones mentioned above.\nTry searching "),o("a",{attrs:{href:"https://packagist.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("packagist"),o("OutboundLink")],1),e._v(" or your favorite search engine, whenever you feel stuck with some outdated lines of code.")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("Note")]),e._v(" "),o("p",[e._v("If you happen to know of other great tools, that can help developers upgrade their legacy applications, then please feel free to contribute to this page's content.")])]),e._v(" "),o("h3",{attrs:{id:"tip-for-installing-tools"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#tip-for-installing-tools"}},[e._v("#")]),e._v(" Tip for installing Tools")]),e._v(" "),o("p",[e._v("Depending on the tool(s) that you choose to use, they can sometimes cause conflicts with the dependencies that your legacy application might contain.\nTo avoid having to deal with this, you can make use of "),o("a",{attrs:{href:"https://github.com/bamarni/composer-bin-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("Composer Bin Plugin"),o("OutboundLink")],1),e._v(".\nIt allows you to install your binary dependencies in a different folder, whilst linking the package's binaries into your regular vendor directory.")]),e._v(" "),o("h2",{attrs:{id:"testing"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#testing"}},[e._v("#")]),e._v(" Testing...?")]),e._v(" "),o("p",[e._v("Depending on your end-goals, perhaps it would be better that you start adding a few automated high-level tests to your legacy application, before starting to refactor, redesign or add several new features.\nNevertheless, bringing automated tests into your legacy application, is beyond the scope of this package.\nYou may find some inspiration by reviewing the following testing frameworks "),o("a",{attrs:{href:"https://codeception.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Codeception"),o("OutboundLink")],1),e._v(", "),o("a",{attrs:{href:"http://www.phpspec.net",target:"_blank",rel:"noopener noreferrer"}},[e._v("PHP Spec"),o("OutboundLink")],1),e._v(", "),o("a",{attrs:{href:"https://docs.behat.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("Behat"),o("OutboundLink")],1),e._v(", "),o("a",{attrs:{href:"https://phpunit.de/",target:"_blank",rel:"noopener noreferrer"}},[e._v("PHPUnit"),o("OutboundLink")],1),e._v("... "),o("a",{attrs:{href:"https://www.google.com/search?q=php+testing+frameworks",target:"_blank",rel:"noopener noreferrer"}},[e._v("etc"),o("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=a.exports}}]);