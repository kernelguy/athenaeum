(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{306:function(e,t,a){"use strict";a.r(t);var s=a(6),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"naming-convention"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#naming-convention"}},[e._v("#")]),e._v(" Naming Convention")]),e._v(" "),a("h2",{attrs:{id:"property-names"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#property-names"}},[e._v("#")]),e._v(" Property Names")]),e._v(" "),a("p",[e._v("Properties can either be stated in "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/CamelCase",target:"_blank",rel:"noopener noreferrer"}},[e._v("CamelCase"),a("OutboundLink")],1),e._v(" or "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/Snake_case",target:"_blank",rel:"noopener noreferrer"}},[e._v("Snake Case"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$person")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("personId")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("78")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Valid")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$person")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("category_name")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[e._v("'Products'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Valid")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Invalid, because its a mix of both camelCase and underscore")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$person")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("swordFish_length")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("63")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("h2",{attrs:{id:"getter-setter-method-names"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getter-setter-method-names"}},[e._v("#")]),e._v(" Getter / Setter Method Names")]),e._v(" "),a("p",[e._v("Getters and setters follow a most strict naming convention; the must follow "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/CamelCase",target:"_blank",rel:"noopener noreferrer"}},[e._v("CamelCase"),a("OutboundLink")],1),e._v(" and be prefixed with "),a("code",[e._v("get")]),e._v(" for getter methods and "),a("code",[e._v("set")]),e._v(" for setter methods.\nIn addition, the "),a("code",[e._v("Overload")]),e._v(" component uses the following syntax or rules when searching for a propertyâ€™s corresponding getter or setter:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('getterMethod = getPrefix, camelCasePropertyName;\ngetPrefix = "get";\n\nsetterMethod = setPrefix, camelCasePropertyName;\nsetPrefix = "set";\n\ncamelCasePropertyName = {uppercaseLetter, {lowercaseLetter}};\n\nuppercaseLetter = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K"\n| "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X"\n| "Y" | "Z" ;\n\nlowercaseLetter = "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k"\n| "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x"\n| "y" | "z" ;\n')])])]),a("p",[a("em",[e._v("Above stated syntax / rules is expressed in "),a("a",{attrs:{href:"http://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_Form",target:"_blank",rel:"noopener noreferrer"}},[e._v("EBNF"),a("OutboundLink")],1)])]),e._v(" "),a("h3",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Looks for getPersonId(), setPersonId($value);")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$person")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("personId")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("78")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Looks for getCategoryName() and setCategoryName($value);")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$person")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token property"}},[e._v("category_name")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[e._v("'Products'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);