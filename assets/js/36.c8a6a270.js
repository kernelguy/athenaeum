(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{252:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"exception-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exception-handling"}},[t._v("#")]),t._v(" Exception Handling")]),t._v(" "),s("p",[t._v("Presumably, your legacy application already has some kind of "),s("a",{attrs:{href:"https://www.php.net/manual/en/function.set-error-handler.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("error"),s("OutboundLink")],1),t._v(", "),s("a",{attrs:{href:"https://www.php.net/manual/en/function.set-exception-handler.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("exception"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://www.php.net/manual/en/function.register-shutdown-function.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("shutdown handling"),s("OutboundLink")],1),t._v("[1].\nTherefore, "),s("strong",[t._v("exception handling in Athenaeum Core Application is disabled, by default")]),t._v(".\nShould you not be happy with your existing solution, then perhaps the possibilities offered here, could prove beneficial.\nAt the very least, it might give you some inspiration.")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#laravel-s-exception-handling"}},[t._v("Laravel's Exception Handling?")])]),s("li",[s("a",{attrs:{href:"#how-it-works"}},[t._v("How it Works")]),s("ul",[s("li",[s("a",{attrs:{href:"#error-shutdown-handling"}},[t._v("Error & Shutdown Handling")])])])]),s("li",[s("a",{attrs:{href:"#prerequisite"}},[t._v("Prerequisite")])]),s("li",[s("a",{attrs:{href:"#enabling-exception-handling"}},[t._v("Enabling Exception Handling")])]),s("li",[s("a",{attrs:{href:"#last-resort-handler"}},[t._v('"Last Resort" Handler')]),s("ul",[s("li",[s("a",{attrs:{href:"#register-your-exception-handler"}},[t._v("Register Your Exception Handler")])])])]),s("li",[s("a",{attrs:{href:"#reporting"}},[t._v("Reporting")]),s("ul",[s("li",[s("a",{attrs:{href:"#don-t-report"}},[t._v("Don't Report")])])])]),s("li",[s("a",{attrs:{href:"#handler-in-action"}},[t._v("Handler In Action")]),s("ul",[s("li",[s("a",{attrs:{href:"#application-didn-t-terminate"}},[t._v("Application didn't Terminate")])])])]),s("li",[s("a",{attrs:{href:"#graceful-shutdown"}},[t._v("Graceful Shutdown")]),s("ul",[s("li",[s("a",{attrs:{href:"#encapsulate-logic-via-run"}},[t._v("Encapsulate logic via run()")])]),s("li",[s("a",{attrs:{href:"#avoid-using-terminating"}},[t._v("Avoid using terminating()?")])]),s("li",[s("a",{attrs:{href:"#use-handles-to-cleanup"}},[t._v("Use Handles to Cleanup")])])])]),s("li",[s("a",{attrs:{href:"#onward"}},[t._v("Onward")])])])]),s("p"),t._v(" "),s("p",[t._v("[1]: "),s("em",[t._v('Error, exception and shutdown handling will be referred to as "exception handling", within this context.')])]),t._v(" "),s("h2",{attrs:{id:"laravel-s-exception-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#laravel-s-exception-handling"}},[t._v("#")]),t._v(" Laravel's Exception Handling?")]),t._v(" "),s("p",[t._v("In the "),s("RouterLink",{attrs:{to:"/archive/current/core/#limitations"}},[t._v("limitations section")]),t._v(", it has been mentioned that the Athenaeum Core Application does not offer Http Request / Response Handling.\nSince Laravel's "),s("a",{attrs:{href:"https://laravel.com/docs/7.x/errors#the-exception-handler",target:"_blank",rel:"noopener noreferrer"}},[t._v("Error & Exception Handling"),s("OutboundLink")],1),t._v(" mechanism depends on a Http Request and Response, it cannot be used directly with this application.\nMore specifically, the "),s("code",[t._v("render()")]),t._v(" method, in Laravel's "),s("a",{attrs:{href:"https://github.com/laravel/framework/blob/6.x/src/Illuminate/Contracts/Debug/ExceptionHandler.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("Exception Handler"),s("OutboundLink")],1),t._v(", requires a request and must return a response.\nSuch cannot be satisfied by the Athenaeum Core Application.\nTherefore, a different mechanism is offered - "),s("em",[t._v("it is still inspired by that of Laravel!")])],1),t._v(" "),s("h2",{attrs:{id:"how-it-works"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works"}},[t._v("#")]),t._v(" How it Works")]),t._v(" "),s("p",[t._v("This exception handling mechanism uses a pseudo "),s("a",{attrs:{href:"https://designpatternsphp.readthedocs.io/en/latest/Structural/Composite/README.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Composite Pattern"),s("OutboundLink")],1),t._v(', where a captured exception is passed through a series of "leaf" exception handlers.\nThe first handler to return '),s("code",[t._v("true")]),t._v(", will stop the process and the exception is considered handled.")]),t._v(" "),s("p",[t._v("Behind the scene, a "),s("code",[t._v("CompositeExceptionHandler")]),t._v(" is responsible for reporting ("),s("em",[t._v("e.g. logging")]),t._v(") and passing captured exceptions to the registered exception handlers.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("        Captured Exception\n                +\n+-----------+   |\n| Handler A |   |\n+-----------+   |\n| Handler B |   |\n+-----------+   |\n| Handler C |   |\n+-----------+   |\n  ...           |\n+-----------+   v\n| Handler X |\n+-----------+\n")])])]),s("p",[t._v("This kind of approach allows you to split your application's exception handling, into multiple smaller sections of logic ("),s("em",[t._v('"leaf" exception handlers')]),t._v(").\nEach of these handlers will, "),s("em",[t._v("ideally")]),t._v(", only be responsible for dealing with a few exceptions, in contrast to a single large and complex exception handler.")]),t._v(" "),s("h3",{attrs:{id:"error-shutdown-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-shutdown-handling"}},[t._v("#")]),t._v(" Error & Shutdown Handling")]),t._v(" "),s("p",[t._v("Whenever a PHP "),s("a",{attrs:{href:"https://www.php.net/manual/en/language.errors.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("error"),s("OutboundLink")],1),t._v(" has been captured, it will be wrapped into an "),s("a",{attrs:{href:"https://www.php.net/manual/en/class.errorexception",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("ErrorException")]),s("OutboundLink")],1),t._v(" and thrown.\nThe exception handling mechanism will then capture and process that exception.\nSimilar logic is applied during PHP's shutdown, in case that an error was encountered.")]),t._v(" "),s("h2",{attrs:{id:"prerequisite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prerequisite"}},[t._v("#")]),t._v(" Prerequisite")]),t._v(" "),s("p",[t._v("This exception handling mechanism depends on Laravel's "),s("a",{attrs:{href:"https://packagist.org/packages/illuminate/log",target:"_blank",rel:"noopener noreferrer"}},[t._v("Log"),s("OutboundLink")],1),t._v("[2] package, as means of default reporting.\nSee "),s("RouterLink",{attrs:{to:"/archive/current/core/usage/logging.html"}},[t._v("Logging chapter")]),t._v(" for how to install it.")],1),t._v(" "),s("h2",{attrs:{id:"enabling-exception-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enabling-exception-handling"}},[t._v("#")]),t._v(" Enabling Exception Handling")]),t._v(" "),s("p",[t._v("To enable exception handling, edit your "),s("code",[t._v(".env")]),t._v(" and set the "),s("code",[t._v("EXCEPTION_HANDLING_ENABLED")]),t._v(" to "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... previous not shown ...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Exception Handling")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EXCEPTION_HANDLING_ENABLED")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("true")]),t._v("\n")])])]),s("h2",{attrs:{id:"last-resort-handler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last-resort-handler"}},[t._v("#")]),t._v(' "Last Resort" Handler')]),t._v(" "),s("p",[t._v('The first "leaf" exception handler that you '),s("em",[t._v("SHOULD")]),t._v(' create, is a "Last resort" exception handler;\na handler that deals with any kind of exceptions, aka. your fallback mechanism.')]),t._v(" "),s("p",[t._v('To create a "lead" exception handler, extend the '),s("code",[t._v("BaseExceptionHandler")]),t._v(' abstraction.\nIn the following example, a very simplified "last resort" exception handler is shown.')]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Acme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Aedart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("BaseExceptionHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Throwable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LastResortExceptionHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseExceptionHandler")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @inheritDoc\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Throwable "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bool\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When application is handling a Http request...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("runningInConsole")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("http_response_code")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'<h1>Sorry... but it seems we have some trouble in our end.</h1>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean constant"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When running in console, just output entire exception")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean constant"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),s("p",[t._v("If at all possible, you "),s("em",[t._v("should avoid sending output directly")]),t._v(" via your exception handlers.\nConsider assigning your desired Http output to a response handler, if such is possible for you.\nIn any case, when creating an exception handler, you should try to accommodate the possibility that your application might be running in the console.\nThis may require a different kind of exception handling.")]),t._v(" "),s("h3",{attrs:{id:"register-your-exception-handler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#register-your-exception-handler"}},[t._v("#")]),t._v(" Register Your Exception Handler")]),t._v(" "),s("p",[t._v('Once your "leaf" exception handler has been completed, add it\'s class path in the '),s("code",[t._v("handlers")]),t._v(" array, which is located in the "),s("code",[t._v("/configs/exceptions.php")]),t._v(" file.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... previous not shown ...")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'handlers'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("EditorExceptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ShoppingExceptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("NavigationExceptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("DbExceptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("LastResortExceptionHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v('Your "last resort" exception handler '),s("em",[t._v("SHOULD")]),t._v(" be placed last, in the "),s("code",[t._v("handlers")]),t._v(" array.")])]),t._v(" "),s("h2",{attrs:{id:"reporting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reporting"}},[t._v("#")]),t._v(" Reporting")]),t._v(" "),s("p",[t._v('By default, an exception is "reported" by the '),s("code",[t._v("CompositeExceptionHandler")]),t._v(', before it is passed through to the registered "leaf" exception handlers.\nWithin this context, the term reporting means logging exceptions.')]),t._v(" "),s("h3",{attrs:{id:"don-t-report"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#don-t-report"}},[t._v("#")]),t._v(" Don't Report")]),t._v(" "),s("p",[t._v("Just like in Laravel's exception handler, if you wish to disable reporting of certain exceptions, add their class paths in the "),s("code",[t._v("$dontReport")]),t._v(" property.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NavigationExceptionHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseExceptionHandler")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * List of exceptions not to be reported\n     * \n     * @var string[] \n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dontReport")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        \\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Acme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Routing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("RouteNotFoundException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        \\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Acme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Routing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("FileDoesNotExistException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Throwable "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bool\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... not shown ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),s("h2",{attrs:{id:"handler-in-action"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#handler-in-action"}},[t._v("#")]),t._v(" Handler In Action")]),t._v(" "),s("p",[t._v("Imagine that the following entry point encounters a condition, where it must throw an exception.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require_once")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__DIR__")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/../vendor/autoload.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require_once")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__DIR__")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/../bootstrap/app.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... your legacy application's logic")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasSignedIn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("RuntimeException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'User is not authenticated'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... etc")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("terminate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("p",[t._v('The thrown exception is captured and passed through the list of registered "lead" exception handlers, until a handler returns '),s("code",[t._v("true")]),t._v('.\nYour "last resort" exception handler '),s("em",[t._v("SHOULD")]),t._v(" handle any exception, which isn't handled by other registered handlers.")]),t._v(" "),s("h3",{attrs:{id:"application-didn-t-terminate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#application-didn-t-terminate"}},[t._v("#")]),t._v(" Application didn't Terminate")]),t._v(" "),s("p",[t._v("When exceptions are thrown and PHP's "),s("a",{attrs:{href:"https://www.php.net/manual/en/function.restore-exception-handler.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("native exception handling"),s("OutboundLink")],1),t._v(" mechanism kicks in, remaining code is not executed.\nIn other words, in the above shown example, the last two lines are never reached, should an exception be thrown.\nAs a consequence of this, any registered termination logic is not executed, by the "),s("code",[t._v("terminate()")]),t._v(" method.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... previous not shown ...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Never executed, in case of exception thrown...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("terminate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])])]),s("p",[t._v("Ensuring clean and graceful application shutdown, is a common problem for many applications.\nIn the next section, a possible solution is explored.")]),t._v(" "),s("h2",{attrs:{id:"graceful-shutdown"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#graceful-shutdown"}},[t._v("#")]),t._v(" Graceful Shutdown")]),t._v(" "),s("p",[t._v("Depending upon your registered service providers, or application's overall logic, it may require termination and shutdown logic.\nFor instance, you may require logic that ensures all open database transactions are committed, or perhaps rolled back in case of exceptions.\nOr perhaps you may require logic, that closes the current session, file points, or other resources.\nA possible solution is to utilise the "),s("code",[t._v("terminating()")]),t._v(" method.\nIt registers callback methods that will be executed, when "),s("code",[t._v("terminate()")]),t._v(" is invoked.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Register callback")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("terminating")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$session")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IoCFacade"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryMake")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$session")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... later in your application ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("terminate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Triggers the registered "terminating" callback method')]),t._v("\n")])])]),s("p",[t._v("Unfortunately, if an exception is thrown, the "),s("code",[t._v("terminate()")]),t._v(" method might never be reached.\nAll of your registered callbacks are therefore not invoked.\nThis could prove problematic, if your application depends on being able to perform "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Graceful_exit",target:"_blank",rel:"noopener noreferrer"}},[t._v('"graceful shutdown"'),s("OutboundLink")],1),t._v(" logic.")]),t._v(" "),s("h3",{attrs:{id:"encapsulate-logic-via-run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#encapsulate-logic-via-run"}},[t._v("#")]),t._v(" Encapsulate logic via "),s("code",[t._v("run()")])]),t._v(" "),s("p",[t._v("A different solution could be, to encapsulate your legacy application's logic via the "),s("code",[t._v("run()")]),t._v(" method.\nIt accepts a single callback. If the callback should fail, e.g. an exception is thrown, it will be captured by the "),s("code",[t._v("run()")]),t._v(" method and passed on to the exception handling mechanism.\nOnce the exception has been handled, code execution is resumed and the "),s("code",[t._v("terminate()")]),t._v(" method is triggered.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require_once")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__DIR__")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/../vendor/autoload.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require_once")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__DIR__")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'/../bootstrap/app.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// E.g. include your legacy application's entry point    ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'my_legacy_app_index.php'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("terminate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("p",[t._v("If the above shown approach is possible for you to implement, then it could contribute towards allowing graceful shutdown.")]),t._v(" "),s("h3",{attrs:{id:"avoid-using-terminating"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#avoid-using-terminating"}},[t._v("#")]),t._v(" Avoid using "),s("code",[t._v("terminating()")]),t._v("?")]),t._v(" "),s("p",[t._v("One could argue that you should avoid registering callbacks, via the "),s("code",[t._v("terminating()")]),t._v(" method.\nBut this might not always be possible.\nImagine that for every request, "),s("em",[t._v("if all goes well")]),t._v(", you application needs to commit open database transactions, before closing it's connection gracefully.\nIt makes sense to use the "),s("code",[t._v("terminate()")]),t._v(", in order to achieve such.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("terminating")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IoCFacade"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryMake")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOpenTransations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... later in your application ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("terminate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Terminating callbacks can also be registered in your Service Provider's "),s("a",{attrs:{href:"https://laravel.com/docs/7.x/providers#the-boot-method",target:"_blank",rel:"noopener noreferrer"}},[t._v("boot method"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// In your service provider")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("boot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Application "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("terminating")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$app")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOpenTransations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("h3",{attrs:{id:"use-handles-to-cleanup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-handles-to-cleanup"}},[t._v("#")]),t._v(" Use Handles to Cleanup")]),t._v(" "),s("p",[t._v("Now, if an exception is encountered, then you could use make use of an exception handler;\none which ensures to rollback any open database transactions - "),s("em",[t._v("or perform other cleanup routines")]),t._v(" - but avoid actually dealing with any exception!\nAny exception would just be passed on to the next registered handler.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Acme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Cleanup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Aedart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CleanupHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RollsBackTransactions")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CleanupHandler")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cleanup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Throwable "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" void\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IoCFacade"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryMake")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOpenTransations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rollback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$db")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),s("p",[t._v("If such an approach is used, then your "),s("code",[t._v("handlers")]),t._v(" array could look something similar, to the below illustrated example.\nIn the top section of the array, you would place handlers that explicitly deal with application cleanup routines, whereas the middle and bottom section of the array would place handlers that deal with exceptions.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token php language-php"}},[s("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... previous not shown ...")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'handlers'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Cleanup         ")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Cleanup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("RollsBackTransactions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Cleanup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ClosesSessions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Storage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Cleanup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("RemovesFileLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Handles exceptions")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("EditorExceptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ShoppingExceptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("NavigationExceptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("DbExceptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Last resort - if all else fails...")]),t._v("\n        Acme\\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("Exceptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Handlers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("LastResortExceptionHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),s("p",[t._v("Ultimately, the burden of ensuring graceful shutdown falls on your shoulders.\nHow you go about it, is entirely up to you.\nThe above illustrated examples is nothing more than a possible solution.")]),t._v(" "),s("h2",{attrs:{id:"onward"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#onward"}},[t._v("#")]),t._v(" Onward")]),t._v(" "),s("p",[t._v("Error, exception & shutdown handling is by no means a trivial task.\nPerhaps your existing mechanism is sufficient and gets the job done.\nIf not, perhaps this package's exception handling can offer a suitable alternative.")])])}),[],!1,null,null,null);a.default=e.exports}}]);